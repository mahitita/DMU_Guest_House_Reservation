import React,
{
useState
}

from 'react';

import {
    createUser
}

from '../services/NetworkAdapter'; // Adjust the import based on your setup

const CreateUser=()=> {

    const [userData,
    setUserData]=useState({
        name: '',
        email: '',
        password: '',
        role: 'user', // Default role
    });

const handleChange=(e)=> {
    setUserData({
        ...userData, [e.target.name]: e.target.value
    });
}

;

const handleSubmit=async (e)=> {
    e.preventDefault();

    try {
        const response=await createUser(userData);
        console.log(response.data); // Handle success response
    }

    catch (error) {
        console.error('Error creating user:', error); // Handle error
    }
}

;

return (<div className="container mx-auto p-4" > <h2 className="text-2xl font-semibold mb-4" >Create User</h2> <form onSubmit= {
        handleSubmit
    }

    className="max-w-md" > <div className="mb-4" > <label htmlFor="name" className="block text-sm font-medium text-gray-700" > Name </label> <input type="text"
    id="name"
    name="name"

    value= {
        userData.name
    }

    onChange= {
        handleChange
    }

    className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
    required /> </div> <div className="mb-4" > <label htmlFor="email" className="block text-sm font-medium text-gray-700" > Email </label> <input type="email"
    id="email"
    name="email"

    value= {
        userData.email
    }

    onChange= {
        handleChange
    }

    className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
    required /> </div> <div className="mb-4" > <label htmlFor="password" className="block text-sm font-medium text-gray-700" > Password </label> <input type="password"
    id="password"
    name="password"

    value= {
        userData.password
    }

    onChange= {
        handleChange
    }

    className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
    required /> </div> <div className="mb-4" > <label htmlFor="role" className="block text-sm font-medium text-gray-700" > Role </label> <select id="role"
    name="role"

    value= {
        userData.role
    }

    onChange= {
        handleChange
    }

    className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"

    > <option value="user" >User</option> <option value="admin" >Admin</option> {
        /* Add other role options based on your application */
    }

    </select> </div> <div className="flex justify-end" > <button type="submit"
    className="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
    > Create User </button> </div> </form> </div>);
}

;

export default CreateUser;